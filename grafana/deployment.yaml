apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      serviceAccountName: sample-acc
      nodeSelector:
        kubernetes.io/hostname: "pi5-m1"
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
          volumeMounts:
            - name: grafana-datasources
              mountPath: /mnt/ext1/grafana/provisioning/datasources
            - name: shared-volume
              mountPath: /mnt/ext1/grafana/provisioning/dashboards
            - name: grafana-config
              mountPath: /mnt/ext1/grafana/grafana.ini
              subPath: grafana.ini
            - name: grafana-dashboard-provisioning
              mountPath: /mnt/ext1/grafana/provisioning/dashboards/dashboard-provisioning.yaml
              subPath: dashboard-provisioning.yaml
              
        - name: grafana-dashboard-sidecar
          image: kiwigrid/k8s-sidecar:latest
          volumeMounts:
            - name: shared-volume
              mountPath: /mnt/ext1/grafana/provisioning/dashboards
          env:
          - name: LABEL
            value: "grafana_dashboard"
          - name: FOLDER
            value: /mnt/ext1/grafana/provisioning/dashboards
          - name: RESOURCE
            value: both
      volumes:
        - name: grafana-volume
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-datasources
          configMap:
            name: grafana-datasources-cm
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: grafana-dashboard-provisioning
          configMap:
            name: grafana-dashboard-provisioning
        - name: shared-volume
          emptyDir: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sample-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "watch", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample-acc
  namespace: grafana
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: sample-rolebind
  namespace: grafana
roleRef:
  kind: ClusterRole
  name: sample-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: sample-acc
  namespace: grafana
        
